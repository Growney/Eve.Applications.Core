@inherits BlazorLayoutComponent
@inject Services.AppState state
@inject Services.SessionState session

<div>
    <div>
        @Body
    </div>
    <CenterDialog Show=ShowRegistration>
        <h3>Sign In</h3>
        <div onclick="@(async () => await LoginRedirect())"><img src="/images/eve-sso-login-white-large.png"></div>
        <h3>Sign Up</h3>
        <button onclick="@(() => DisplayNewSingle())">Register</button>
    </CenterDialog>
    <CenterDialog Show=ShowNewSingle>
        <form asp-action="Character">
            <h3>Register as a Single User</h3>
            <p>Register to use the application as a single user allowing you to view and multiple characters information</p>

            <div>Button</div>
        </form>
    </CenterDialog>
</div>

<div>
    @(session)
    @(session.TenantName ?? "No Tenant") 
</div>

<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.3.1/css/all.css" integrity="sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU" crossorigin="anonymous">


@functions
{
    bool ShowRegistration { get; set; }
    bool ShowNewSingle { get; set; }
    string LoginUrl { get; set; } = string.Empty;

    protected override async Task OnInitAsync()
    {
        state.OnDisplayRegistration += DisplayRegistration;
        await session.Init();
        StateHasChanged();
    }
    protected override void OnInit()
    {

    }

    private void DisplayRegistration()
    {
        ShowNewSingle = false;
        ShowRegistration = true;
        StateHasChanged();
    }
    private void DisplayNewSingle()
    {
        ShowRegistration = false;
        ShowNewSingle = true;
        StateHasChanged();
    }

    private async Task LoginRedirect()
    {
        await state.NavigateExternally(await state.GetStringAsync("api/registration/getloginredirect"));
    }

}